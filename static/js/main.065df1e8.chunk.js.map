{"version":3,"sources":["Components/Header.js","Components/MapViewer.js","Components/CountryModal.js","Components/Country.js","Components/CountriesList.js","Components/Panel.js","Components/Graph.js","App.js","Components/Footer.js","serviceWorker.js","index.js"],"names":["Header","nav","className","role","aria-label","initial","opacity","y","animate","transition","duration","id","aria-expanded","data-target","aria-hidden","href","to","Component","MapViewer","props","Map","center","zoom","minZoom","TileLayer","noWrap","url","data","map","country","index","Circle","key","countryInfo","lat","long","color","radius","active","Popup","CountryModal","isActive","name","src","flag","alt","totalCases","todayCases","recovered","deaths","todayDeaths","critical","tests","Country","state","this","setState","prevState","onClick","setActive","cases","CountriesList","countries","results","modifier","_id","Panel","setActiveCategory","category","activeLink","type","placeholder","onChange","handleInput","Graph","article","x","App","e","searchCountry","target","value","globalStats","setTimeout","axios","get","then","response","catch","error","console","log","filteredCountries","filter","toLowerCase","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.065df1e8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <motion.nav\n        className=\"navbar is-black\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n        initial={{ opacity: 0, y: -250 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"navbar-brand\">\n          <span className=\"navbar-item\">\n            <a>\n              <h3 id=\"tool-title\">ðŸ§¬ COVID-19 Tracker</h3>\n            </a>\n          </span>\n\n          <a\n            role=\"button\"\n            className=\"navbar-burger burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarBasicExample\"\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <div className=\"navbar-item has-dropdown is-hoverable\">\n              <a id=\"more-dropdown\" className=\"navbar-link\">\n                More\n              </a>\n\n              <div className=\"navbar-dropdown\">\n                <a\n                  href=\"https://github.com/Katert/covid19-tracker\"\n                  className=\"navbar-item\"\n                >\n                  Project repo (Github)\n                </a>\n                <hr className=\"navbar-divider\" />\n                <Link to={\"/report-issue\"} className=\"navbar-item\">\n                  Report an issue (coming soon)\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </motion.nav>\n    );\n  }\n}\n","import React from \"react\";\nimport { Map, Circle, Popup, TileLayer } from \"react-leaflet\";\n\nconst MapViewer = (props) => {\n  return (\n    <Map center={[26.53448, 13.662376]} zoom={1} minZoom={2}>\n      <TileLayer\n        noWrap={true}\n        url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"\n      />\n\n      {props.data.map((country, index) => (\n        <Circle\n          className=\"pulse\"\n          key={index}\n          center={[country.countryInfo.lat, country.countryInfo.long]}\n          color=\"rgb(102, 163, 121)\"\n          radius={country.active / 1.5}\n        >\n          <Popup>\n            {country.country}<br />\n            Active cases: {country.active}\n          </Popup>\n        </Circle>\n      ))}\n    </Map>\n  );\n};\n\nexport default MapViewer;\n","import React from \"react\";\nimport MapViewer from './MapViewer'\n\nconst CountryModal = props => {\n\n    return (\n      <div className={props.isActive === true ? 'modal is-active' : 'modal'}>\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <p className=\"modal-card-title\">{props.name}</p><br/>\n          </header>\n          <section className=\"modal-card-body\">\n            <img className=\"flag-image\" src={props.flag} alt=\"\"/>\n            <br/>\n            <div className=\"table-container\">\n            <table className=\"table is-fullwidth\">\n              <tbody>\n                <tr>\n                  <th>Total cases:</th>\n                  <td>{props.totalCases}</td>\n                </tr>\n                <tr>\n                  <th>Active cases:</th>\n                  <td>{props.active}</td>\n                </tr>\n                <tr>\n                  <th>Cases registered today:</th>\n                  <td>{props.todayCases}</td>\n                </tr>\n                <tr>\n                  <th>Total recovered:</th>\n                  <td>{props.recovered}</td>\n                </tr>\n                <tr>\n                  <th>Total deaths:</th>\n                  <td>{props.deaths}</td>\n                </tr>\n                <tr>\n                  <th>Deaths registered today:</th>\n                  <td>{props.todayDeaths}</td>\n                </tr>\n                <tr>\n                  <th>Critical cases:</th>\n                  <td>{props.critical}</td>\n                </tr>\n                <tr>\n                  <th>Tests taken:</th>\n                  <td>{props.tests}</td>\n                </tr>\n              </tbody>\n            </table>\n            </div>\n          </section>\n          <footer className=\"modal-card-foot\">\n            <button className=\"button\">Close</button>\n          </footer>\n        </div>\n      </div>\n    );\n  \n};\n\nexport default CountryModal;\n","import React, { Component } from \"react\";\nimport CountryModal from \"./CountryModal\";\n\nclass Country extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      isActive: false\n    };\n  }\n\n  setActive() {\n    this.setState(prevState => ({\n      isActive: !prevState.isActive\n    }));\n  }\n\n  render() {\n    return (\n      <li onClick={() => this.setActive()} className=\"list-item\">\n      <CountryModal \n        isActive={this.state.isActive}\n        name={this.props.name}\n        flag={this.props.flag}\n        cases={this.props.cases}\n        totalCases={this.props.totalCases}\n        todayCases={this.props.todayCases}\n        deaths={this.props.deaths}\n        todayDeaths={this.props.todayDeaths}\n        recovered={this.props.recovered}\n        active={this.props.active}\n        critical={this.props.critical}\n        tests={this.props.tests}\n      />\n        <a href=\"#\" className=\"panel-block\">\n          <span className=\"panel-icon\">\n            <img src={this.props.flag} alt=\"\"></img>\n          </span>\n          <div>\n            <strong>{this.props.name}:</strong>\n            <div className=\"cases\">{this.props.cases}</div>\n          </div>\n        </a>\n      </li>\n    );  \n  }\n};\n\nexport default Country;\n","import React from \"react\";\nimport Country from \"./Country\";\n\nconst CountriesList = props => {\n  const results = props.data;\n  let countries;\n\n  if (props.modifier === \"todayCases\") {\n    countries = results.map((country, index) => (\n      <Country\n        key={index}\n        id={country.countryInfo._id}\n        flag={country.countryInfo.flag}\n        name={country.country}\n        totalCases={country.cases} // for modal\n        cases={country.todayCases} // for panel\n        todayCases={country.todayCases}\n        deaths={country.deaths}\n        todayDeaths={country.todayDeaths}\n        recovered={country.recovered}\n        active={country.active}\n        critical={country.critical}\n        tests={country.tests}\n        lat={country.countryInfo.lat}\n        long={country.countryInfo.long}\n      />\n    ));\n  } else if (props.modifier === \"recovered\") {\n    countries = results.map((country, index) => (\n      <Country\n        key={index}\n        id={country.countryInfo._id}\n        flag={country.countryInfo.flag}\n        name={country.country}\n        totalCases={country.cases} // for modal\n        cases={country.recovered} // for panel\n        todayCases={country.todayCases}\n        deaths={country.deaths}\n        todayDeaths={country.todayDeaths}\n        recovered={country.recovered}\n        active={country.active}\n        critical={country.critical}\n        tests={country.tests}\n        lat={country.countryInfo.lat}\n        long={country.countryInfo.long}\n      />\n    ));\n  } else if (props.modifier === \"deaths\") {\n    countries = results.map((country, index) => (\n      <Country\n        key={index}\n        id={country.countryInfo._id}\n        flag={country.countryInfo.flag}\n        name={country.country}\n        totalCases={country.cases} // for modal\n        cases={country.deaths} // for panel\n        todayCases={country.todayCases}\n        deaths={country.deaths}\n        todayDeaths={country.todayDeaths}\n        recovered={country.recovered}\n        active={country.active}\n        critical={country.critical}\n        tests={country.tests}\n        lat={country.countryInfo.lat}\n        long={country.countryInfo.long}\n      />\n    ));\n  }\n\n  return <ul className=\"list\">{countries}</ul>;\n};\n\nexport default CountriesList;\n","import React, { Component } from \"react\";\nimport CountriesList from \"./CountriesList\";\n\nclass Panel extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activeLink: \"todayCases\"\n    };\n  }\n\n  setActiveCategory = (category) => {\n    this.setState({\n      activeLink: category\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <p className=\"panel-tabs\">\n          <a\n            className={this.state.activeLink === \"todayCases\" ? \"is-active\" : \"\"}\n            onClick={() => this.setActiveCategory(\"todayCases\")}\n          >\n            <strong>Today cases</strong>\n          </a>\n          <a\n            className={this.state.activeLink === \"recovered\" ? \"is-active\" : \"\"}\n            onClick={() => this.setActiveCategory(\"recovered\")}\n          >\n            <strong>Cured</strong>\n          </a>\n          <a\n            className={this.state.activeLink === \"deaths\" ? \"is-active\" : \"\"}\n            onClick={() => this.setActiveCategory(\"deaths\")}\n          >\n            <strong>Deaths</strong>\n          </a>\n        </p>\n        <div className=\"panel-block\">\n          <p className=\"control has-icons-left\">\n            <input\n              className=\"input is-dark\"\n              type=\"text\"\n              placeholder=\"Search\"\n              onChange={this.props.handleInput}\n            />\n            <span className=\"icon is-left\">\n              <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\n            </span>\n          </p>\n        </div>\n        <div className=\"countries-list\">\n          <CountriesList\n            modifier={this.state.activeLink}\n            data={this.props.data}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Panel;\n","import React, { Component } from \"react\";\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from \"recharts\";\nimport { motion } from \"framer-motion\";\n\nconst data = [\n  { name: \"Jan\", uv: 5000, pv: 2400, amt: 2400 },\n  { name: \"Feb\", uv: 2000, pv: 2400, amt: 2400 },\n  { name: \"Mar\", uv: 4000, pv: 2400, amt: 2400 },\n  { name: \"Apr\", uv: 8000, pv: 2400, amt: 2400 },\n  { name: \"May\", uv: 5000, pv: 2400, amt: 2400 },\n  { name: \"June\", uv: 3000, pv: 2400, amt: 2400 },\n  { name: \"July\", uv: 7000, pv: 2400, amt: 2400 },\n  { name: \"Aug\", uv: 1000, pv: 2400, amt: 2400 },\n  { name: \"Sept\", uv: 4000, pv: 2400, amt: 2400 },\n  { name: \"Oct\", uv: 2000, pv: 2400, amt: 2400 },\n  { name: \"Nov\", uv: 7000, pv: 2400, amt: 2400 },\n  { name: \"Dec\", uv: 9000, pv: 2400, amt: 2400 },\n];\n\nclass Graph extends Component {\n  render() {\n    return (\n      <motion.article\n        className=\"tile is-child box\"\n        initial={{ opacity: 0, x: 250 }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ duration: 1 }}\n      >\n        <p className=\"title is-4\">Global statistics (confirmed cases)</p>\n\n        {/* <LineChart className=\"graph\" width={850} height={400} data={data}>\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#000000\" />\n          <CartesianGrid stroke=\"#ccc\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n        </LineChart> */}\n        <h1>Coming soon</h1>\n      </motion.article>\n    );\n  }\n}\n\nexport default Graph;\n","import React, { Component } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\n// Component imports\nimport Header from \"./Components/Header\";\nimport Panel from \"./Components/Panel\";\nimport MapViewer from \"./Components/MapViewer\";\nimport Graph from \"./Components/Graph\";\nimport Footer from \"./Components/Footer\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      countries: [],\n      globalStats: {},\n      searchCountry: \"\",\n    };\n  }\n\n  handleInput = (e) => {\n    this.setState({ searchCountry: e.target.value });\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      axios\n      .get(\"https://corona.lmao.ninja/v2/countries?yesterday&sort\")\n      .then((response) => {\n        this.setState({\n          countries: response.data,\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n\n    axios\n      .get(\"https://corona.lmao.ninja/v2/all?yesterday\")\n      .then((response) => {\n        this.setState({\n          globalStats: response.data,\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n    }, 1100)\n  }\n\n  render() {\n    // Enables searchbar\n    let filteredCountries = this.state.countries.filter((country) => {\n      return country.country\n        .toLowerCase()\n        .includes(this.state.searchCountry.toLowerCase());\n    });\n\n    return (\n      <BrowserRouter>\n        <Header />\n        <div className=\"app\">\n          <div id=\"tiles\" className=\"tile is-ancestor\">\n            <div id=\"search-tool\" className=\"tile is-4 is-vertical is-parent\">\n              <motion.article\n                className=\"tile is-child box\"\n                initial={{ opacity: 0, x: -250 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 1 }}\n              >\n                <p className=\"title is-4\">Countries</p>\n                <article className=\"panel\">\n                  <Panel\n                    handleInput={this.handleInput}\n                    data={filteredCountries}\n                  />\n                </article>\n              </motion.article>\n            </div>\n            <div className=\"tile is-parent is-vertical\">\n              <motion.article\n                className=\"mapviewer tile is-child box\"\n                initial={{ opacity: 0, x: 250 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 1 }}\n              >\n                <p className=\"title is-4\">Global map (active cases)</p>\n                <MapViewer data={this.state.countries} />\n              </motion.article>\n              <Graph\n                globalStats={this.state.globalStats}\n                data={this.state.countries}\n              />\n            </div>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport { motion } from \"framer-motion\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <motion.footer \n        className=\"footer\"\n        initial={{opacity: 0}}\n        animate={{opacity: 1}}\n        transition={{duration: 2}}\n        >\n        <div className=\"content has-text-centered\">\n          <p>\n            <strong>Bulma</strong> by{\" \"}\n            <a href=\"https://jgthms.com\">Jeremy Thomas</a>. The source code is\n            licensed\n            <a href=\"http://opensource.org/licenses/mit-license.php\">MIT</a>.\n            The website content is licensed{\" \"}\n            <a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">\n              CC BY NC SA 4.0\n            </a>\n            .\n          </p>\n        </div>\n      </motion.footer>\n    );\n  }\n}\n\nexport default Footer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}